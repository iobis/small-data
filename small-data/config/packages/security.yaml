security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        #ADDED, set the source for the security/login data
        in_database:
            entity:
                class: App\Entity\Inputter
                property: email
#    ADDED , set the encryption algorithm for the password in the database (bcrypt cannot be reversed)
    encoders:
        App\Entity\Inputter:
            algorithm: bcrypt

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            #ADDED
            provider: in_database  #string matching the provider name given above

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: security_logout
                target: home
            access_denied_handler: App\Security\AccessDeniedHandler

    access_control:
#        - { path: ^/.*/editFields, roles: ROLE_INPUTTER }
        - { path: ^/.*/create_occurrence, roles: ROLE_INPUTTER}
        - { path: ^/.*/editSpecies, roles: ROLE_VALIDATOR }

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
