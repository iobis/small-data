{% extends 'base.html.twig' %}
{% block head_scripts %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.3.3/dist/leaflet.js"
            integrity="sha512-tAGcCfR4Sc5ZP5ZoVz0quoZDYX5aCtEm/eu1KhSLj2c9eFrylXZknQYmxUssFaVJKvvc0dJQixhGjG2yXWiV9Q=="
            crossorigin=""></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.48.0/mapbox-gl.css' rel='stylesheet' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.48.0/mapbox-gl.js'></script>

{% endblock %}

{% block body %}
<h1>Create a new occurrence for <i>{{ singleSpecies.speciesNameWorms }}</i></h1>



    {% form_theme formCreateOccurrence 'bootstrap_4_layout.html.twig' %}

    {{ form_start(formCreateOccurrence) }}

    {{ form_row(formCreateOccurrence.eventDate) }}

            <div id="map_for_occurrence" style="height: 400px; width: 800px;"></div>

            <div style="border-style: solid">
                <p><i>Geolocator helper:</i> please insert approximate coordinates</p>
                Lat.: <input type="text" style="width:30px;" value="0" id="latDeg"/>deg
                <input type="text" style="width:50px;" value="0" id="latMin"/>min
                <input type="text" style="width:50px;" value="0" id="latSec"/>sec
                <select  id="latCard">
                    <option value="N">N</option>
                    <option value="S">S</option>
                </select>
                &nbsp;Long.: <input type="text" style="width:60px;" value="0" id="lngDeg"/>deg
                <input type="text" style="width:50px;" value="0" id="lngMin"/>min
                <input type="text" style="width:50px;" value="0" id="lngSec"/>sec
                <select  id="lngCard">
                    <option value="E">E</option>
                    <option value="W">W</option>
                </select>




                <input type="button" onclick="zoomToDMS()" value="Locate"/></p>

                <p>Latitude: <input type="text" style="width:60px;" value="0" name="lat" id="lat"/>
                    &nbsp;Longitude: <input type="text" style="width:60px;" value= "0" name="lng" id="lng"/>
                    <input type="button" onclick="zoomTo()" value="Locate"/></p>
                <p>Drag the blue pointer to the accurate location (map or satellite option) and copy the decimal values below to the form</p>
                <p id="toDMS"></p>
                <span>Lat:</span>
                <span id="getLatitude">&nbsp;</span>
                <span>Lng:</span><span id="getLongitude">&nbsp;</span>
         </div>





    {{ form_row(formCreateOccurrence.decimalLatitude,
        {'label':"Latitude (in decimals)", 'attr':{'placeholder': "Required (e.g. 23.24345), from -90 to 90", 'id':'getLatitude'}}) }}
    {{ form_row(formCreateOccurrence.decimalLongitude,
        {'label':"Longitude (in decimals)", 'attr':{'placeholder': "Required (e.g. 12.24345), from -180 to 180"}}) }}
    {{ form_row(formCreateOccurrence.locality,
        {'attr':{'placeholder': "Name of the location (optional)"}}) }}
    {{ form_row(formCreateOccurrence.vernacularName,
        {'attr':{'placeholder': "Given name at collection(optional)"}}) }}
    {{ form_row(formCreateOccurrence.scientificNameAtCollection,
        {'label':"Original scientific name given during the collection", 'attr':{'placeholder': "(optional)"}}) }}
    {{ form_row(formCreateOccurrence.locationId,
        {'label':"Marine region identifier ( or any location ID)",'attr':{'placeholder': "(optional)"}}) }}
    {{ form_row(formCreateOccurrence.occurrenceRemarks,
        {'label':"Remarks (Reference and others)",'attr':{'placeholder': "(optional)"}}) }}
    {{ form_row(formCreateOccurrence.associatedMediaUrl,
        {'label':"URL for any media to the particular observation", 'attr':{'placeholder':"(optional)"}}) }}

    <button type="submit" class="btn btn-success">Submit</button>

    {{ form_end(formCreateOccurrence) }}

    <script src="{{ asset('js/DMS.js') }}"></script>
    <script>
        var mapUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}';
        var mapAttributes = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>';

        var satellite = L.tileLayer(mapUrl, {id: 'mapbox.satellite',
            accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdGk3ZzYwaGY4M3dtcTFvcmpzNWt0In0.eDKRO3APxmefQb1H-gaT2A',
            attribution:mapAttributes
        });
        var streets = L.tileLayer(mapUrl, {id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdGk3ZzYwaGY4M3dtcTFvcmpzNWt0In0.eDKRO3APxmefQb1H-gaT2A',
            attribution:mapAttributes
        });

        var mapForOccurrence = L.map('map_for_occurrence',{
            zoom:3,
            center: [50,0],
            layers: [satellite, streets]
        });
        var baseLayers = {
            "Satellite": satellite,
            "Map": streets,
        };

        L.control.layers(baseLayers).addTo(mapForOccurrence);


        function zoomTo() {
            var lat = document.getElementById("lat").value;
            var lng = document.getElementById("lng").value;
            mapForOccurrence.setView(new L.LatLng(lat, lng), 7);
            var myMarker = L.marker([lat, lng], {draggable: true}).addTo(mapForOccurrence)
                .on('dragend', function() {                               //https://stackoverflow.com/questions/27609294/how-to-remove-marker-from-leaflet-map
                    var coord = String(myMarker.getLatLng())                  //getLatLng produces a string e.g. 'LatLng(50.124, -0,32443)'
                        .split(/[(),]+/);                                           //var coord is now a vector (split is either '(', ')', or ','
                    console.log(coord);
                    var lat = coord[1].trim();
                    console.log(lat);
                    var lng = coord[2].trim();
                    console.log(lng);
                    function getSingleCoordinate(latOrLng){
                        return latOrLng;
                    }
                    myMarker.bindPopup("lat " + lat + " lng " + lng );
                    document.getElementById('getLatitude').innerHTML = getSingleCoordinate(lat);
                    document.getElementById('getLongitude').innerHTML = getSingleCoordinate(lng);

                });
        };
        function zoomToDMS() {
            var latDeg = parseFloat(document.getElementById("latDeg").value);
            var latMin = document.getElementById("latMin").value;
            var latSec = document.getElementById("latSec").value;
            var latCard = document.getElementById("latCard").value;
            var lngDeg = parseFloat(document.getElementById("lngDeg").value);
            var lngMin = document.getElementById("lngMin").value;
            var lngSec = document.getElementById("lngSec").value;
            var lngCard = document.getElementById("lngCard").value;
            var lat = latDeg + (latMin/60)+(latSec/3600);
            console.log(latCard);
            if (latCard == 'S') {lat = -lat;};
            var lng = lngDeg +(lngMin/60)+(lngSec/3600);
            if (lngCard == 'W') {lng = -lng;};
            console.log(latDeg);
            console.log(lat);


            mapForOccurrence.setView(new L.LatLng(lat, lng), 7);
            var myMarker = L.marker([lat, lng], {draggable: true}).addTo(mapForOccurrence)
                .on('dragend', function() {
                    var coord = String(myMarker.getLatLng())                  //getLatLng produces a string e.g. 'LatLng(50.124, -0,32443)'
                        .split(/[(),]+/);                                           //var coord is now a vector (split is either '(', ')', or ','
                    console.log(coord);
                    var lat = coord[1].trim();
                    console.log(lat);
                    var lng = coord[2].trim();
                    console.log(lng);
                    function getSingleCoordinate(latOrLng){
                        return latOrLng;
                    }
                    myMarker.bindPopup("lat " + lat + " lng " + lng );
                    document.getElementById('getLatitude').innerHTML = getSingleCoordinate(lat);
                    document.getElementById('getLongitude').innerHTML = getSingleCoordinate(lng);
                    document.getElementById('toDMS').innerHTML = convertDMS(getSingleCoordinate(lat), getSingleCoordinate(lng));

                });
        };

    </script>



{% endblock %}