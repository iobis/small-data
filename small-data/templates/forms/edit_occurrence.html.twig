{% extends 'base.html.twig' %}

{% block head_scripts %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.3.3/dist/leaflet.js"
            integrity="sha512-tAGcCfR4Sc5ZP5ZoVz0quoZDYX5aCtEm/eu1KhSLj2c9eFrylXZknQYmxUssFaVJKvvc0dJQixhGjG2yXWiV9Q=="
            crossorigin=""></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.48.0/mapbox-gl.css' rel='stylesheet' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.48.0/mapbox-gl.js'></script>

{% endblock %}

{% block body %}


{#https://stackoverflow.com/questions/24383917/symfony2-get-user-role-in-twig#}
    {% if  (app.user  ==  occurrence.inputter) or (is_granted ('ROLE_VALIDATOR')) %}
        <h1>Edit coordinates of occurrence {{ occurrence.id }} for <i>{{ singleSpecies.speciesNameWorms }} </i></h1>
        <p>Created by {{ occurrence.inputter.firstName }} {{ occurrence.inputter.lastName }} ({{ occurrence.inputter.username }}),
            on {{ occurrence.occurrenceCreatedAt | date ('d/m/Y')}}
            at {{ occurrence.occurrenceCreatedAt | date ('H:i')}}</p>
        <p>
            <a href="{{ path('occurrence_edit_gps', {'idOccurrence': occurrence.id}) }}" class="btn btn-primary">Quick GeoEdit</a>
        </p>


        {% form_theme formEditOccurrence 'bootstrap_4_layout.html.twig' %}

        {{ form_start(formEditOccurrence) }}

        <div id="map_for_occurrence" style="height: 400px; width: 800px;"></div>

        <div style="border-style: solid">
            <p><i>Geolocator helper:</i> please insert approximate coordinates</p>
            {#<p>Latitude: <input type="text" style="width:60px;" name="lat" id="lat"/>#}
                {#&nbsp;Longitude: <input type="text" style="width:60px;" name="lng" id="lng"/>#}
                {#<input type="button" onclick="zoomTo()" value="Locate"/></p>#}
            <p>Drag the blue pointer to the accurate location (map or satellite option) and copy the values below in the form</p>
            <span>Latitude:</span>
            <span id="getLatitude">0</span>
            <br>
            <span>Longitude: </span><span id="getLongitude">0</span>

        </div>

        {% set latPlaceholder = "<div id=getLatitude></div>" %}
        {{ form_row(formEditOccurrence.decimalLatitude,
            {'label':"Latitude (in decimals)", 'attr':{'id': 'getlatitude'}}) }}

        {{ form_row(formEditOccurrence.decimalLongitude,
            {'label':"Longitude (in decimals)", 'attr':{'placeholder': "Required (e.g. 12.24345), from -180 to 180"}}) }}
        {{ form_row(formEditOccurrence.eventDate) }}

        {{ form_row(formEditOccurrence.locality,
            {'attr':{'placeholder': "Name of the location (optional)"}}) }}
        {{ form_row(formEditOccurrence.vernacularName,
            {'attr':{'placeholder': "Given name at collection(optional)"}}) }}
        {{ form_row(formEditOccurrence.scientificNameAtCollection,
            {'label':"Original scientific name given during the collection", 'attr':{'placeholder': "(optional)"}}) }}
        {{ form_row(formEditOccurrence.locationId,
            {'label':"Marine region identifier ( or any location ID)",'attr':{'placeholder': "(optional)"}}) }}
        {{ form_row(formEditOccurrence.occurrenceRemarks,
            {'label':"Remarks (e.g., stranded specimen,...",'attr':{'placeholder': "(optional)"}}) }}
        {{ form_row(formEditOccurrence.associatedMediaUrl,
            {'label':"URL for any media to the particular observation", 'attr':{'placeholder':"(optional)"}}) }}
        <div style="color:red; font-size: 150%">
            {{ form_row(formEditOccurrence.species, {'label':"Species ( ! attribution of the occurrence record to another species)"}) }}
        </div>



        <button type="submit" class="btn btn-success">Submit</button>

        {{ form_end(formEditOccurrence) }}


    {% else %}

        <h1>Occurrence {{ occurrence.id }} for <i>{{ singleSpecies.speciesNameWorms }} </i></h1>
        <p>Created by {{ occurrence.inputter.firstName }} {{ occurrence.inputter.lastName }} ({{ occurrence.inputter.username }}),
            on {{ occurrence.occurrenceCreatedAt | date ('d/m/Y')}}
            at {{ occurrence.occurrenceCreatedAt | date ('H:i')}}</p>
        <br>
        <h4>As you are not the creator of this record, please notice that you are not authorized to edit it.</h4>
        <h4>Please contact the administrator to become a validator</h4>

    {% endif %}
{% endblock %}

{% block scripts_bottom %}

    <script>
        var mapUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}';
        var mapAttributes = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>';

        var satellite = L.tileLayer(mapUrl, {id: 'mapbox.satellite',
            accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdGk3ZzYwaGY4M3dtcTFvcmpzNWt0In0.eDKRO3APxmefQb1H-gaT2A',
            attribution:mapAttributes
        });
        var streets = L.tileLayer(mapUrl, {id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdGk3ZzYwaGY4M3dtcTFvcmpzNWt0In0.eDKRO3APxmefQb1H-gaT2A',
            attribution:mapAttributes
        });

        var mapForOccurrence = L.map('map_for_occurrence',{
            zoom:12,
            center: [50,0],
            layers: [satellite, streets]
        });
        var baseLayers = {

            "Map": streets,
            "Satellite": satellite,
        };

        L.control.layers(baseLayers).addTo(mapForOccurrence);



            var lat = {{ occurrence.decimalLatitude }};
            var lng = {{ occurrence.decimalLongitude }};
            document.getElementById('getLatitude').innerHTML = lat;
            document.getElementById('getLongitude').innerHTML = lng;



            mapForOccurrence.setView(new L.LatLng(lat, lng), 12);
            var myMarker = L.marker([lat, lng], {draggable: true}).addTo(mapForOccurrence)
                .on('dragend', function() {
                    var coord = String(myMarker.getLatLng())                  //getLatLng produces a string e.g. 'LatLng(50.124, -0,32443)'
                        .split(/[(),]+/);                                           //var coord is now a vector (split is either '(', ')', or ','
                    console.log(coord);
                    var lat = coord[1].trim();
                    console.log(lat);
                    var lng = coord[2].trim();
                    console.log(lng);
                    function getSingleCoordinate(latOrLng){
                        return latOrLng;
                    }
                    myMarker.bindPopup("LAT " + lat + " \nLNG " + lng );
                    document.getElementById('getLatitude').innerHTML = getSingleCoordinate(lat);
                    document.getElementById('getLongitude').innerHTML = getSingleCoordinate(lng);


                });




    </script>


{% endblock %}