{% extends 'base.html.twig' %}

{% block head_scripts %}
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.3/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.3.3/dist/leaflet.js"
            integrity="sha512-tAGcCfR4Sc5ZP5ZoVz0quoZDYX5aCtEm/eu1KhSLj2c9eFrylXZknQYmxUssFaVJKvvc0dJQixhGjG2yXWiV9Q=="
            crossorigin=""></script>
    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.48.0/mapbox-gl.css' rel='stylesheet' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.48.0/mapbox-gl.js'></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">


{% endblock %}

{% block body %}
<h1><i>{{ singleSpecies.speciesNameWorms }}</i></h1>
    <h3>World register of marine species ID {{ singleSpecies.wormsAphiaId }}</h3>

    <div class="row">
        <div class="col-4">
            {% if singleSpecies.speciesImages is not empty   %}
                {% set numberOfImagesForDisplay  = 0 %}

                {% for image in singleSpecies.speciesImages if image.isForDisplay %}
                    {#{% if image.isForDisplay and image.isMain %}#}
                    <div  style="max-height: 200px; max-width: 200px">
                        <img src="{{ asset('uploads/images_species/' ~ image.speciesImageName) }}"
                             style="max-height:100%; max-width: 100%;" alt="" class="myImg">
                    </div>
                    {% set numberOfImagesForDisplay  = numberOfImagesForDisplay +1 %}
                {% endfor %}
                {% if numberOfImagesForDisplay == 0 %}
                    <div  style="max-height: 200px; max-width: 200px">
                        <img src="{{ asset('images/placeholders/SeaweedPlaceholder.JPG') }}"
                             style="max-height:100%; max-width: 100%" alt="">
                    </div>
                {% endif %}


            {% else %}
                <div  style="max-height: 200px; max-width: 200px">
                    <img src="{{ asset('images/placeholders/SeaweedPlaceholder.JPG') }}"
                         style="max-height:100%; max-width: 100%" alt="">
                </div>
            {% endif %}
        </div>
        <div class="col-4">
            <h5>Phylum: {{ singleSpecies.phylum.phylumNameWorms }}</h5>
            <h5>{{ singleSpecies.occurrences |length }} occurrence records</h5>
            {% set numberOfValidatedRecords = 0 %}
            {% for occurrence in singleSpecies.occurrences if occurrence.isValidated %}
                {% set numberOfValidatedRecords = numberOfValidatedRecords + 1 %}
            {% endfor %}
            <h5>{{ numberOfValidatedRecords }} validated records</h5>

        </div>
        <div class="col-4">

            <a href="{{ path('occurrences_list', {'idSpecies': singleSpecies.id}) }}" class="btn btn-primary">List of occurrences</a>
        </div>
    </div>

    <div class="row">
        <div class="col" >
            {#Position of the chart#}
            <div id="histogram" class="col" style="height:300px; width:300px;"></div>

        </div>
        <div class="col">
            <div id="map_for_occurrences" style="height:400px; width:700px"></div>
        </div>
    </div>


    <!-- The Modal -->
    <div id="myModal" class="modal">

        <!-- The Close Button -->
        <span class="close" style="color: white;">&times;</span>

        <!-- Modal Content (The Image) -->
        <img class="modal-content" id="img01">

        <!-- Modal Caption (Image Text) -->
        <div id="caption"></div>
    </div>





{% endblock %}

{% block scripts_bottom %}
    <script>

        //https://stackoverflow.com/questions/12491101/javascript-create-array-from-for-loop
        // Get the modal
        var modal = document.getElementById('myModal');

        // Get the image and insert it inside the modal - use its "alt" text as a caption
        var img = $('.myImg');
        var modalImg = $("#img01");
        var captionText = document.getElementById("caption");
        $('.myImg').click(function(){
            modal.style.display = "block";
            var newSrc = this.src;
            modalImg.attr('src', newSrc);
            captionText.innerHTML = this.alt;
            document.getElementById("map_for_occurrences").style.display = "none";
        });

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        span.onclick = function() {
            modal.style.display = "none";
            document.getElementById("map_for_occurrences").style.display = "";
        }

    </script>

    <script>
    var year = [
    {% for occurrence in singleSpecies.occurrences %}
    {% if occurrence.isValidated %}
    {% if occurrence.species == singleSpecies %}
    {% if loop.index0 != 0 %},{% endif %}
    {{ occurrence.eventDate | date ('Y')}}
    {% endif %}
    {% endif %}
    {% endfor %}

    ];

    var trace = {
    x: year,
    type: 'histogram'
    };
    var data = [trace];
    var layout = {
    title: "Frequency of<br><i>{{ singleSpecies.speciesNameWorms }}</i><br>validated occurrences",
    xaxis:{title: "Year"},
    yaxis:{title: "Number of occurrences"}
    };
    Plotly.newPlot('histogram', data, layout);

    </script>

    <script>
        var intervalLayer0 = L.layerGroup();
        var intervalLayer1 = L.layerGroup();
        var intervalLayer2 = L.layerGroup();
        var intervalLayer3 = L.layerGroup();
        var intervalLayer4 = L.layerGroup();
        var intervalLayer5 = L.layerGroup();
        var intervalLayer6 = L.layerGroup();
        var intervalLayer7 = L.layerGroup();

        var LeafIcon = L.Icon.extend({
            options: {
                iconSize:     [10, 10],
                iconAnchor:   [9, 9],
                popupAnchor:  [9, 2]
            }
        });
        //See http://colorbrewer2.org/#type=diverging&scheme=RdYlGn&n=8
        var icon0 = new LeafIcon({iconUrl: '{{ asset('images/cb0.png') }}'}),
            icon1 = new LeafIcon({iconUrl: '{{ asset('images/cb1.png') }}'}),
            icon2 = new LeafIcon({iconUrl: '{{ asset('images/cb2.png') }}'}),
            icon3 = new LeafIcon({iconUrl: '{{ asset('images/cb3.png') }}'}),
            icon4 = new LeafIcon({iconUrl: '{{ asset('images/cb4.png') }}'}),
            icon5 = new LeafIcon({iconUrl: '{{ asset('images/cb5.png') }}'}),
            icon6 = new LeafIcon({iconUrl: '{{ asset('images/cb6.png') }}'}),
            icon7 = new LeafIcon({iconUrl: '{{ asset('images/cb7.png') }}'});

        var markers = [];
        {% for intervalWithFreqAndOccurrences in intervalsWithFreqAndOccurrences %}
        {% set nameForIcon = 'icon' ~ loop.index0 %}
        {% set nameForLayerGroup = 'intervalLayer' ~ loop.index0 %}
        {% for occurrence in intervalWithFreqAndOccurrences.2 %}
        {% if occurrence.isValidated %}
        {% if occurrence.species == singleSpecies %}
        var marker = L.marker([{{ occurrence.decimalLatitude }}, {{ occurrence.decimalLongitude }}], {title: "id{{ occurrence.id }}", icon:{{ nameForIcon}} })
            .bindPopup("<p>{{ occurrence.locality }}</br>{{ occurrence.eventDate | date ('Y')}}</br># {{ occurrence.id }}</p>")
            .addTo({{ nameForLayerGroup }});
        markers.push (marker);
        {% endif %}
        {% endif %}
        {% endfor %}
        {% endfor %}

        var mapUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}';
        var mapAttributes = 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>';

        var satellite = L.tileLayer(mapUrl, {id: 'mapbox.satellite',
            accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdGk3ZzYwaGY4M3dtcTFvcmpzNWt0In0.eDKRO3APxmefQb1H-gaT2A',
            attribution:mapAttributes
        });
        var streets = L.tileLayer(mapUrl, {id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoiZm1pbmV1ciIsImEiOiJjamwzdGk3ZzYwaGY4M3dtcTFvcmpzNWt0In0.eDKRO3APxmefQb1H-gaT2A',
            attribution:mapAttributes
        });



        var optionsMap = {
            zoom:3,
            center: [50,0]
        };
        var mapForOccurrences = L.map('map_for_occurrences',{
            zoom:3,
            center: [50,0],
            layers: [satellite, streets,intervalLayer0, intervalLayer1, intervalLayer2, intervalLayer3, intervalLayer4,
                intervalLayer5, intervalLayer6, intervalLayer7]
        });


        var baseLayers = {
            "Satellite": satellite,
            "Map": streets,
        };

        var overlays = {
            {% for intervalWithFreqAndOccurrences in intervalsWithFreqAndOccurrences %}
            {% set nameLayer = 'intervalLayer' ~ loop.index0 %}
            {% set indexOfLoop = '' ~ loop.index0 %}
            "<img style='vertical-align:middle; height: 10px' src='{{ asset("images/cb#{indexOfLoop}.png") }}'><div style='vertical-align:middle; display:inline;'>&nbsp; {{ intervalWithFreqAndOccurrences.0 }}</div>": {{ nameLayer }},
            {% endfor %}
        };

        L.control.layers(baseLayers, overlays).addTo(mapForOccurrences);

    </script>



{% endblock %}